    ? abstract class...

    FieldMapper.php
        mapToExistDto: FieldDto
        mapToExistEntity: Field

    OrderMapper.php
        mapToExistDto: OrderDto
        mapToExistEntity: Order

    PriceMapper.php
        mapToExistDto: PriceDto
        mapToExistEntity: Price

    ProductCategoryMapper.php
        mapToExistDto: ProductCategoryDto
        mapToExistEntity: ProductCategory



    class MainMapper(
        construct(from:string, to:string)

        mapToExistDto(): ?
        mapToExistEntity(): ?
    )



    Собирать на лету объект?

    new MainMapper(PriceDto::class, Price::class);

    $dto = $this->mainMapper->mapToExistDto($entity)

    mapToExistDto(? $entity, ? $dto){
        // проверить что класс $this->from существует
        $varsFrom = get_class_vars($this->from);

        // проверить что класс $this->to существует
        $varsTo = get_class_vars($this->to);

        сопоставить $varsFrom и $varsTo
        если есть свойства в $varsTo из $varsFrom (сравнить массивы)
        записать в отдельный $vars

        берём $vars,
        ищем его метод, и вызываем, записывая данные из другого объекта


        // get_class_methods
        // get_class_vars
        // PriceDto::class

        // $entity
        // $dto
    }


    PriceDto{
        value:int
        valueFraction:string
    }

    как обходить вложенность мапперов?

    mappers:
        Dto:
            ProductDto: Product
        Entity:
            Product: ProductDto




